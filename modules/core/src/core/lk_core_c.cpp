/**
 *
 * MACHINE GENERATED FILE. DO NOT EDIT.
 *
 * Bindings for library lk
 *
 * This file has been generated by dub 2.1.~.
 */
#include "dub/dub.h"
#include "lk/TimeRef.h"
#include "lk/Finalizer.h"

using namespace lk;

extern "C" {
int luaopen_lk_TimeRef(lua_State *L);
int luaopen_lk_Finalizer(lua_State *L);
}

// --=============================================== FUNCTIONS
// Functions from namespace lk
static const struct luaL_Reg lk_functions[] = {
  { NULL, NULL},
};


extern "C" int luaopen_lk_core_c(lua_State *L) {
  luaopen_lk_TimeRef(L);
  luaopen_lk_Finalizer(L);

  // Create the table which will contain all the constants
  lua_getfield(L, LUA_GLOBALSINDEX, "lk");
  if (lua_isnil(L, -1)) {
    // no global table called lk
    lua_pop(L, 1);
    lua_newtable(L);
    // <lib>
    lua_pushvalue(L, -1);
    // <lib> <lib>
    // _G.lk = <lib>
    lua_setglobal(L, "lk");
    // <lib>
  }
  // <lib>
  luaL_register(L, NULL, lk_functions);
  // <lib>
  lua_pop(L, 1);
  return 0;
}

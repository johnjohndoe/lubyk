#ifndef _platform_hpp_
#define _platform_hpp_

/////////////////////////////////////////////
// Package related
/////////////////////////////////////////////
#define PACKAGE @PACKAGE@
#define PACKAGE_NAME @PACKAGE_NAME@
#define PACKAGE_VERSION @PACKAGE_VERSION@

#define PACKAGE_VERSION_MAJOR @PACKAGE_VERSION_MAJOR@
#define PACKAGE_VERSION_MINOR @PACKAGE_VERSION_MINOR@
#define PACKAGE_VERSION_PATCH @PACKAGE_VERSION_PATCH@

//#define DLL_EXPORT @PACKAGE_EXPORT@

//TODO
/* Define to the address where bug reports for this package should be sent. */
#cmakedefine PACKAGE_BUGREPORT
/* Define to the full name and version of this package. */
#cmakedefine PACKAGE_STRING
/* Define to the one symbol short name of this package. */
#cmakedefine PACKAGE_TARNAME
/* Define to the home page for this package. */
#cmakedefine PACKAGE_URL


/////////////////////////////////////////////
// OS related
/////////////////////////////////////////////
/* Translate CMake VAR to ZMQ defs */
#cmakedefine ZMQ_HAVE_WINDOWS
#cmakedefine ZMQ_HAVE_LINUX
#cmakedefine ZMQ_HAVE_OSX

//TODO
#cmakedefine ZMQ_HAVE_MINGW32
#cmakedefine ZMQ_HAVE_AIX
#cmakedefine ZMQ_HAVE_FREEBSD
#cmakedefine ZMQ_HAVE_HPUX
#cmakedefine ZMQ_HAVE_OPENBSD
#cmakedefine ZMQ_HAVE_OPENPGM
#cmakedefine ZMQ_HAVE_OPENPGM2
#cmakedefine ZMQ_HAVE_QNXNTO
#cmakedefine ZMQ_HAVE_SOLARIS

#cmakedefine _WINSOCKAPI_
#cmakedefine NOMINMAX

/////////////////////////////////////////////
// Check headers
/////////////////////////////////////////////

/* Define to 1 if you have the <arpa/inet.h> header file. */
#cmakedefine HAVE_ARPA_INET_H

/* Define to 1 if you have the <dlfcn.h> header file. */
#cmakedefine HAVE_DLFCN_H

/* Define to 1 if you have the <errno.h> header file. */
#cmakedefine HAVE_ERRNO_H

/* Define to 1 if you have the <ifaddrs.h> header file. */
#cmakedefine HAVE_IFADDRS_H

/* Define to 1 if you have the <inttypes.h> header file. */
#cmakedefine HAVE_INTTYPES_H

/* Define to 1 if you have the <limits.h> header file. */
#cmakedefine HAVE_LIMITS_H

/* Define to 1 if you have the <memory.h> header file. */
#cmakedefine HAVE_MEMORY_H

/* Define to 1 if you have the <stddef.h> header file. */
#cmakedefine HAVE_STDDEF_H

/* Define to 1 if you have the <stdint.h> header file. */
#cmakedefine HAVE_STDINT_H

/* Define to 1 if you have the <stdlib.h> header file. */
#cmakedefine HAVE_STDLIB_H

/* Define to 1 if you have the <strings.h> header file. */
#cmakedefine HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#cmakedefine HAVE_STRING_H

/* Define to 1 if you have the <sys/eventfd.h> header file. */
#cmakedefine HAVE_SYS_EVENTFD_H

/* Define to 1 if you have the <sys/socket.h> header file. */
#cmakedefine HAVE_SYS_SOCKET_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#cmakedefine HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/time.h> header file. */
#cmakedefine HAVE_SYS_TIME_H

/* Define to 1 if you have the <sys/types.h> header file. */
#cmakedefine HAVE_SYS_TYPES_H

/* Define to 1 if you have the <unistd.h> header file. */
#cmakedefine HAVE_UNISTD_H

/* Define to 1 if you have the <windows.h> header file. */
#cmakedefine HAVE_WINDOWS_H

/* Define to 1 if you have the <netinet/in.h> header file. */
#cmakedefine HAVE_NETINET_IN_H

/* Define to 1 if you have the <netinet/tcp.h> header file. */
#cmakedefine HAVE_NETINET_TCP_H

/* Define to 1 if you have the <ruby.h> header file. */
#cmakedefine HAVE_RUBY_H

/////////////////////////////////////////////
// Check functions
/////////////////////////////////////////////

/* Define to 1 if you have the `freeifaddrs' function. */
#cmakedefine HAVE_FREEIFADDRS 1

/* Define to 1 if you have the `getifaddrs' function. */
#cmakedefine HAVE_GETIFADDRS

/* Define to 1 if you have the `gettimeofday' function. */
#cmakedefine HAVE_GETTIMEOFDAY

/* Define to 1 if you have the `memset' function. */
#cmakedefine HAVE_MEMSET

/* Define to 1 if you have the `perror' function. */
#cmakedefine HAVE_PERROR

/* Define to 1 if you have the `socket' function. */
#cmakedefine HAVE_SOCKET

/////////////////////////////////////////////
// Check libraries
/////////////////////////////////////////////

/* Define to 1 if you have the `Iphlpapi' library (-lIphlpapi). */
#cmakedefine HAVE_LIBIPHLPAPI

/* Define to 1 if you have the `nsl' library (-lnsl). */
#cmakedefine HAVE_LIBNSL

/* Define to 1 if you have the `pthread' library (-lpthread). */
#cmakedefine HAVE_LIBPTHREAD

/* Define to 1 if you have the `Rpcrt4' library (-lRpcrt4). */
#cmakedefine HAVE_LIBRPCRT4

/* Define to 1 if you have the `rt' library (-lrt). */
#cmakedefine HAVE_LIBRT

/* Define to 1 if you have the `socket' library (-lsocket). */
#cmakedefine HAVE_LIBSOCKET

/* Define to 1 if you have the `stdc++' library (-lstdc++). */
#cmakedefine HAVE_LIBSTDC__

/* Define to 1 if you have the `uuid' library (-luuid). */
#cmakedefine HAVE_LIBUUID

/* Define to 1 if you have the `ws2_32' library (-lws2_32). */
#cmakedefine HAVE_LIBWS2_32


/////////////////////////////////////////////
// Check other stuff
/////////////////////////////////////////////
/* Define to 1 if your system has a GNU libc compatible `malloc' function, and
   to 0 otherwise. */
#cmakedefine HAVE_MALLOC

/* Define to 1 if stdbool.h conforms to C99. */
#cmakedefine HAVE_STDBOOL_H

/* Define to 1 if the system has the type `_Bool'. */
#cmakedefine HAVE__BOOL

/* Define to the sub-directory in which libtool stores uninstalled libraries.
   */
#cmakedefine LT_OBJDIR

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
#cmakedefine NO_MINUS_C_MINUS_O

/* Define as the return type of signal handlers (`int' or `void'). */
#cmakedefine RETSIGTYPE

/* Define to 1 if you have the ANSI C header files. */
#cmakedefine STDC_HEADERS

/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */
#cmakedefine TIME_WITH_SYS_TIME

/* Force to use mutexes */
#cmakedefine ZMQ_FORCE_MUTEXES

/* Have eventfd extension. */
#cmakedefine ZMQ_HAVE_EVENTFD

/* Define for Solaris 2.5.1 so the uint32_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   cmakedefine below would cause a syntax error. */
#cmakedefine _UINT32_T

/* Define to empty if `const' does not conform to ANSI C. */
#cmakedefine const

/* Define to rpl_malloc if the replacement function should be used. */
#cmakedefine malloc

/* Define to `unsigned int' if <sys/types.h> does not define. */
#cmakedefine size_t

/* Define to `int' if <sys/types.h> does not define. */
#cmakedefine ssize_t

/* Define to the type of an unsigned integer type of width exactly 32 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine uint32_t

/* Define to empty if the keyword `volatile' does not work. Warning: valid
   code using `volatile' can become incorrect without. Disable with care. */
#cmakedefine volatile

#endif
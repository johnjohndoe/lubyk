<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="classzmq_1_1_poller" kind="class" prot="public">
    <compoundname>zmq::Poller</compoundname>
    <includes refid="_poller_8h" local="no">Poller.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classzmq_1_1_poller_1a5e52f42cc4b725ffad5743635caf9b9b" prot="private" static="no" mutable="no">
        <type>zmq_pollitem_t *</type>
        <definition>zmq_pollitem_t* zmq::Poller::pollitems_</definition>
        <argsstring></argsstring>
        <name>pollitems_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Contiguous array of pollitems. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" line="59" bodyfile="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classzmq_1_1_poller_1a25e34f52af6102a5d118dc7185e268ea" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int zmq::Poller::pollitems_size_</definition>
        <argsstring></argsstring>
        <name>pollitems_size_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Size of the pollitems array. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" line="63" bodyfile="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classzmq_1_1_poller_1ace8c21321df7921d5476b648121b33d3" prot="private" static="no" mutable="no">
        <type>int *</type>
        <definition>int* zmq::Poller::idx_to_pos_</definition>
        <argsstring></argsstring>
        <name>idx_to_pos_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resolve idx to actual position in pollitems. (needed because pollitems can move due to array compaction). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" line="68" bodyfile="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classzmq_1_1_poller_1a132fc4f9ce6390c1cf504c9798069a43" prot="private" static="no" mutable="no">
        <type>int *</type>
        <definition>int* zmq::Poller::pos_to_idx_</definition>
        <argsstring></argsstring>
        <name>pos_to_idx_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resolve pos to idx. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" line="72" bodyfile="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classzmq_1_1_poller_1a5f4e51b42b28b2a72beb908e21cf453f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int zmq::Poller::used_count_</definition>
        <argsstring></argsstring>
        <name>used_count_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of slots used in the pollitems. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" line="76" bodyfile="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classzmq_1_1_poller_1a18bf5e60e5b75fce4e8ce76989132679" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int zmq::Poller::event_count_</definition>
        <argsstring></argsstring>
        <name>event_count_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Event count (set during poll operation). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" line="80" bodyfile="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classzmq_1_1_poller_1a36710780e8664a7f6d94ee6f6ce67fbd" prot="private" static="no" mutable="no">
        <type>TimeRef</type>
        <definition>TimeRef zmq::Poller::time_</definition>
        <argsstring></argsstring>
        <name>time_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Time reference for precise timing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" line="84" bodyfile="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classzmq_1_1_poller_1a81342f4252b33884385fc1d844c1190b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool zmq::Poller::interrupted_</definition>
        <argsstring></argsstring>
        <name>interrupted_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>We set this to true when we receive a SIGINT. This enables poll to return false. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" line="89" bodyfile="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classzmq_1_1_poller_1a6ab80f411e0dfb094da0407f2918ac8c" prot="public" static="yes" mutable="no">
        <type>pthread_key_t</type>
        <definition>pthread_key_t zmq::Poller::sThisKey</definition>
        <argsstring></argsstring>
        <name>sThisKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" line="317" bodyfile="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classzmq_1_1_poller_1ab1902c19d79435bdfb9990145383ae92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>zmq::Poller::Poller</definition>
        <argsstring>(int reserve=8)</argsstring>
        <name>Poller</name>
        <param>
          <type>int</type>
          <declname>reserve</declname>
          <defval>8</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a zmq poller and reserve free slots. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" line="100" bodyfile="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" bodystart="93" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classzmq_1_1_poller_1a8f9dee6dc38621c7a82809c6fbd408ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>zmq::Poller::~Poller</definition>
        <argsstring>()</argsstring>
        <name>~Poller</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" line="130" bodyfile="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" bodystart="130" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classzmq_1_1_poller_1a08be8489aaee2d0ade8ff1bdf839ce48" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool zmq::Poller::poll</definition>
        <argsstring>(float timeout)</argsstring>
        <name>poll</name>
        <param>
          <type>float</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Polls for new events and ensures that if we timeout, this is done as precisely as possible (pads with nanosleep). <simplesect kind="return"><para>true on success, false on interruption. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>in milliseconds. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" line="141" bodyfile="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" bodystart="141" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classzmq_1_1_poller_1abe06259a302655881eed1ac716abf449" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>LuaStackSize</type>
        <definition>LuaStackSize zmq::Poller::events</definition>
        <argsstring>(lua_State *L)</argsstring>
        <name>events</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a table with all event idx or nil. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" line="200" bodyfile="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" bodystart="200" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classzmq_1_1_poller_1a333f32eed1ef2b5f77ed2e28afd93627" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int zmq::Poller::add</definition>
        <argsstring>(int fd, int events)</argsstring>
        <name>add</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>events</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" line="218" bodyfile="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" bodystart="218" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classzmq_1_1_poller_1adfc902286b26f6e29ab809a74debd7be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int zmq::Poller::add</definition>
        <argsstring>(zmq::Socket *sock, int events)</argsstring>
        <name>add</name>
        <param>
          <type><ref refid="classzmq_1_1_socket" kindref="compound">zmq::Socket</ref> *</type>
          <declname>sock</declname>
        </param>
        <param>
          <type>int</type>
          <declname>events</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" line="222" bodyfile="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" bodystart="222" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classzmq_1_1_poller_1a5e4197ac4ed9932f40d0dae3fcd80aae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void zmq::Poller::modify</definition>
        <argsstring>(int idx, int events, lua_State *L)</argsstring>
        <name>modify</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>events</declname>
        </param>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Modify an item&apos;s events by its id. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" line="228" bodyfile="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" bodystart="228" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="classzmq_1_1_poller_1ae90abc98bde5c2f0451603970bdcafb3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void zmq::Poller::remove</definition>
        <argsstring>(int idx)</argsstring>
        <name>remove</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove an item by its id. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" line="250" bodyfile="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" bodystart="250" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classzmq_1_1_poller_1a9c6fc1f9d6136f534442e771bc3a874b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int zmq::Poller::count</definition>
        <argsstring>()</argsstring>
        <name>count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" line="276" bodyfile="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" bodystart="276" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="classzmq_1_1_poller_1a8fc5036306f6b3667844a4924716f458" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>LuaStackSize</type>
        <definition>LuaStackSize zmq::Poller::idxToPos</definition>
        <argsstring>(int idx, lua_State *L)</argsstring>
        <name>idxToPos</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used for testing only. <simplesect kind="return"><para>pos or nil </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" line="283" bodyfile="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" bodystart="283" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="classzmq_1_1_poller_1a8ffaf312d0c5d9c2856b6b8a7f37e447" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>LuaStackSize</type>
        <definition>LuaStackSize zmq::Poller::posToIdx</definition>
        <argsstring>(int pos, lua_State *L)</argsstring>
        <name>posToIdx</name>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used for testing only. <simplesect kind="return"><para>pos or nil </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" line="292" bodyfile="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" bodystart="292" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="classzmq_1_1_poller_1a1b9ddae14c69b4112f3f3e41a33b6534" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>LuaStackSize</type>
        <definition>LuaStackSize zmq::Poller::posToFd</definition>
        <argsstring>(int pos, lua_State *L)</argsstring>
        <name>posToFd</name>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used for testing only. <simplesect kind="return"><para>fd or nil </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" line="301" bodyfile="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" bodystart="301" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="classzmq_1_1_poller_1a9089999eff431f60d3f79b5fcd84d883" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>LuaStackSize</type>
        <definition>LuaStackSize zmq::Poller::posToEvent</definition>
        <argsstring>(int pos, lua_State *L)</argsstring>
        <name>posToEvent</name>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used for testing only. <simplesect kind="return"><para>fd or nil </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" line="310" bodyfile="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" bodystart="310" bodyend="314"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classzmq_1_1_poller_1a372f17bfca9bf84cd98b87a69272261b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int zmq::Poller::addItem</definition>
        <argsstring>(int fd, void *socket, int events)</argsstring>
        <name>addItem</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>socket</declname>
        </param>
        <param>
          <type>int</type>
          <declname>events</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" line="319" bodyfile="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" bodystart="319" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="classzmq_1_1_poller_1a8c4a125d4bcae1d10ca927f638ef67de" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void zmq::Poller::setupInterruptHook</definition>
        <argsstring>()</argsstring>
        <name>setupInterruptHook</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" line="370" bodyfile="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" bodystart="370" bodyend="377"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classzmq_1_1_poller_1ac447625ccfda6190f2e7a244c9aaf85f" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void zmq::Poller::sInterrupted</definition>
        <argsstring>(int i)</argsstring>
        <name>sInterrupted</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" line="363" bodyfile="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" bodystart="363" bodyend="368"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>ZeroMQ polling helper.</para><para><simplesect kind="par"><title>Bindings info:</title><para>push: pushobject register:&apos;Poller_core&apos; string_format: %f string_args: self-&gt;<ref refid="classzmq_1_1_poller_1a9c6fc1f9d6136f534442e771bc3a874b" kindref="member">count()</ref> </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" line="56" bodyfile="/home/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h" bodystart="56" bodyend="378"/>
    <listofallmembers>
      <member refid="classzmq_1_1_poller_1a333f32eed1ef2b5f77ed2e28afd93627" prot="public" virt="non-virtual"><scope>zmq::Poller</scope><name>add</name></member>
      <member refid="classzmq_1_1_poller_1adfc902286b26f6e29ab809a74debd7be" prot="public" virt="non-virtual"><scope>zmq::Poller</scope><name>add</name></member>
      <member refid="classzmq_1_1_poller_1a372f17bfca9bf84cd98b87a69272261b" prot="private" virt="non-virtual"><scope>zmq::Poller</scope><name>addItem</name></member>
      <member refid="classzmq_1_1_poller_1a9c6fc1f9d6136f534442e771bc3a874b" prot="public" virt="non-virtual"><scope>zmq::Poller</scope><name>count</name></member>
      <member refid="classzmq_1_1_poller_1a18bf5e60e5b75fce4e8ce76989132679" prot="private" virt="non-virtual"><scope>zmq::Poller</scope><name>event_count_</name></member>
      <member refid="classzmq_1_1_poller_1abe06259a302655881eed1ac716abf449" prot="public" virt="non-virtual"><scope>zmq::Poller</scope><name>events</name></member>
      <member refid="classzmq_1_1_poller_1ace8c21321df7921d5476b648121b33d3" prot="private" virt="non-virtual"><scope>zmq::Poller</scope><name>idx_to_pos_</name></member>
      <member refid="classzmq_1_1_poller_1a8fc5036306f6b3667844a4924716f458" prot="public" virt="non-virtual"><scope>zmq::Poller</scope><name>idxToPos</name></member>
      <member refid="classzmq_1_1_poller_1a81342f4252b33884385fc1d844c1190b" prot="private" virt="non-virtual"><scope>zmq::Poller</scope><name>interrupted_</name></member>
      <member refid="classzmq_1_1_poller_1a5e4197ac4ed9932f40d0dae3fcd80aae" prot="public" virt="non-virtual"><scope>zmq::Poller</scope><name>modify</name></member>
      <member refid="classzmq_1_1_poller_1a08be8489aaee2d0ade8ff1bdf839ce48" prot="public" virt="non-virtual"><scope>zmq::Poller</scope><name>poll</name></member>
      <member refid="classzmq_1_1_poller_1ab1902c19d79435bdfb9990145383ae92" prot="public" virt="non-virtual"><scope>zmq::Poller</scope><name>Poller</name></member>
      <member refid="classzmq_1_1_poller_1a5e52f42cc4b725ffad5743635caf9b9b" prot="private" virt="non-virtual"><scope>zmq::Poller</scope><name>pollitems_</name></member>
      <member refid="classzmq_1_1_poller_1a25e34f52af6102a5d118dc7185e268ea" prot="private" virt="non-virtual"><scope>zmq::Poller</scope><name>pollitems_size_</name></member>
      <member refid="classzmq_1_1_poller_1a132fc4f9ce6390c1cf504c9798069a43" prot="private" virt="non-virtual"><scope>zmq::Poller</scope><name>pos_to_idx_</name></member>
      <member refid="classzmq_1_1_poller_1a9089999eff431f60d3f79b5fcd84d883" prot="public" virt="non-virtual"><scope>zmq::Poller</scope><name>posToEvent</name></member>
      <member refid="classzmq_1_1_poller_1a1b9ddae14c69b4112f3f3e41a33b6534" prot="public" virt="non-virtual"><scope>zmq::Poller</scope><name>posToFd</name></member>
      <member refid="classzmq_1_1_poller_1a8ffaf312d0c5d9c2856b6b8a7f37e447" prot="public" virt="non-virtual"><scope>zmq::Poller</scope><name>posToIdx</name></member>
      <member refid="classzmq_1_1_poller_1ae90abc98bde5c2f0451603970bdcafb3" prot="public" virt="non-virtual"><scope>zmq::Poller</scope><name>remove</name></member>
      <member refid="classzmq_1_1_poller_1a8c4a125d4bcae1d10ca927f638ef67de" prot="private" virt="non-virtual"><scope>zmq::Poller</scope><name>setupInterruptHook</name></member>
      <member refid="classzmq_1_1_poller_1ac447625ccfda6190f2e7a244c9aaf85f" prot="private" virt="non-virtual"><scope>zmq::Poller</scope><name>sInterrupted</name></member>
      <member refid="classzmq_1_1_poller_1a6ab80f411e0dfb094da0407f2918ac8c" prot="public" virt="non-virtual"><scope>zmq::Poller</scope><name>sThisKey</name></member>
      <member refid="classzmq_1_1_poller_1a36710780e8664a7f6d94ee6f6ce67fbd" prot="private" virt="non-virtual"><scope>zmq::Poller</scope><name>time_</name></member>
      <member refid="classzmq_1_1_poller_1a5f4e51b42b28b2a72beb908e21cf453f" prot="private" virt="non-virtual"><scope>zmq::Poller</scope><name>used_count_</name></member>
      <member refid="classzmq_1_1_poller_1a8f9dee6dc38621c7a82809c6fbd408ac" prot="public" virt="non-virtual"><scope>zmq::Poller</scope><name>~Poller</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

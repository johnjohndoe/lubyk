* OpenGL bindings with luajit FFI (see https://github.com/Neopallium/lua-zmq/blob/master/src/zmq_ffi.nobj.lua)
* Video grabing/recording (using FFI ? OpenCV ? FFMPEG ?). See https://github.com/mkottman/ffi_fun/blob/master/ffmpeg_audio.lua
* Morph opens with zone and path
* lk.Process starts with morph role (=name), IP and port.
* WebDAV adaptor for lk.Morph so that we can use the pseudo-filesystem to 
  * create process (mkdir)
  * change process script (edit [process].lua file)
  * change patch (edit _patch.yml)
* LuaObject should accept a table as parameter (need to fix dub)
* Create a method to ease subclassing of LuaObjects or simply fix WidgetClass()

* lk.Service/lk.Client should enable this:
================================================================================
serv = lk.Service('Mars')
-- start sending jobs to workers
i = 0
while true do
  i = i + 1
  serv:push(i, 'do something')
end

--- other thread
cli = lk.Client(function(count, msg)
  print('handling', count, msg)
end
cli:pull('Mars')
================================================================================


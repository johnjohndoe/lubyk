# ==============================================================================
#
#  Platform guessing
#
# ==============================================================================

if(UNIX)
  if(APPLE)
    set(LUBYK_LIB /Applications/Lubyk.app/Contents/Resources)
    set(PLAT "macosx")
    # add_definitions(-DLUA_USE_MACOSX)
    add_definitions(-D__MACOSX_CORE__)
    # CoreFoundation needed by Midi and cannot be added in dylib
    set(PLAT_LINK "-all_load -flat_namespace -framework Accelerate -framework CoreFoundation -framework OpenGL -framework GLUT -lobjc")
    set(PLAT_OBJ_FLAGS "-flat_namespace -undefined suppress -dynamic -bundle")

    if (RELEASE)
      # We do not use CMAKE_OSX_ARCHITECTURES because it triggers
      # isysroot and then the build fails.
      set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -arch x86_64 -arch i386")
      set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS}-arch x86_64 -arch i386")
    endif(RELEASE)
  else(APPLE)
    set(LUBYK_LIB /usr/local/lib/lubyk)
    set(LINUX true)
    set(PLAT "linux")
    add_definitions(-D__LINUX_ALSASEQ__)
    set(PLAT_LINK "rt")
    set(PLAT_OBJ_FLAGS "-dynamic")
  endif(APPLE)
else(UNIX)
  if(WIN32)
    set(PLAT "win32")
  else(WIN32)
    set(PLAT "unsupported")
  endif(WIN32)
endif(UNIX)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -Wall -fPIC")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -g -Wall -fPIC")
if (RELEASE)
  add_definitions(-O2 -DNDEBUG)
endif(RELEASE)
add_definitions(-D__${PLAT}__ -DUSE_READLINE)
